#!/usr/bin/env bash

#
# For playing games like "Wordscapes", where we are trying to fill in a
# crossword using permutations of a single larger word.  First argument is the
# word (or just string of letters if we haven't figured out the word yet),
# the second is a pattern for the slot in the puzzle you are trying to fill.
# Pattern should include the letters you know in the appropriate positions,
# with a '.' in the position of every unknown letter.
#
# We depend on an external program/script called "permute" to generate
# permutations of our input "big word" string.  We don't assume it puts
# permutations in order or whatever, we handle that here with a sort -u.
#
# Words are "recognized" by passing the GNU spell check, so results are limited
# to its vocabulary
#
# Sure, it's cheating - but it beats paying for clues ;-)
#

INSTRING="${1:-}"
WPATT="${2:-}"

wscape()
{
	BASE=$1
	PATT=$2
	WSIZE=${#WPATT}
	permute "$INSTRING" |
	cut -c1-${WSIZE} |
	sort -u |
	grep "${WPATT}" > /tmp/spellme

	{
		cat /tmp/spellme
		spell < /tmp/spellme
	} |
	sort |
	uniq -u
}

test -n "$1" -a -n "$2" && { wscape $1 $2 ; exit 0 ; } || exit 1

## END
